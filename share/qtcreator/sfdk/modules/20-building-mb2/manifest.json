{
    "version": 5,
    "domain": "building",
    "trBrief": "Building software",

    "worker":
    {
        "type": "engine-command",
        "version": 4,
        "program": "mb2"
    },

    "commands":
    [
        {
            "name": "build-init",
            "trSynopsis": "[<project-dir-or-file>]",
            "trBrief": "Initialize build directory",
            "configOptions": ["[no-]snapshot", "specfile", "target!"]
        },
        {
            "name": "build-requires",
            "trSynopsis": "[--[no-]refresh] {pull|reset|diff}",
            "trBrief": "Update build time dependencies",
            "configOptions": ["*", "-no-pull-build-requires", "-package.*", "target!"],
            "hooks": ["[pre-|post-]pull-build-requires"]
        },
        {
            "name": "prepare",
            "trBrief": "Prepare sources using the recipe from spec file",
            "configOptions": ["*", "-package.*", "target!"]
        },
        {
            "name": "apply",
            "trSynopsis": "[-R]",
            "trBrief": "Apply patches listed in the spec file",
            "configOptions": ["*", "-no-pull-build-requires", "-[no-]search-output-dir", "-package.*", "target!"]
        },
        {
            "name": "build",
            "trSynopsis": "[-p|--prepare] [--no-check] [-d|--enable-debug] [-j <n>] [--sign] [<project-dir-or-file>] [--] [<rpmbuild-extra-arg>...]",
            "trBrief": "Execute all build steps at once",
            "configOptions": ["*", "target!"],
            "hooks": ["[pre-|post-]pull-build-requires", "post-package", "pre-sign"],
            "preRun": "module.maybeImportSigningKey",
            "commandLineFilter": "module.filterBuildCommandLine"
        },
        {
            "name": "qmake",
            "trSynopsis": "[<project-dir-or-file>] [--] [<qmake-extra-arg>...]",
            "trBrief": "Execute qmake build step",
            "configOptions": ["*", "-package.*", "target!"],
            "hooks": ["[pre-|post-]pull-build-requires"]
        },
        {
            "name": "cmake",
            "trSynopsis": "[<project-dir>] [--] [<cmake-extra-arg>...]\n--build . [<cmake-extra-arg>...] [-- <build-tool-extra-arg>...]",
            "trBrief": "Execute cmake build step",
            "configOptions": ["*", "-package.*", "target!"],
            "hooks": ["[pre-|post-]pull-build-requires"],
            "commandLineFilter": "module.filterCMakeCommandLine"
        },
        {
            "name": "make",
            "trSynopsis": "[<make-extra-arg>...]",
            "trBrief": "Execute make build step",
            "configOptions": ["[no-]fix-version", "[no-]snapshot", "specfile", "target!"]
        },
        {
            "name": "make-install",
            "trBrief": "Execute make-install build step",
            "configOptions": ["[no-]fix-version", "[no-]snapshot", "specfile", "target!"]
        },
        {
            "name": "package",
            "trSynopsis": "[--no-check] [--sign]",
            "trBrief": "Execute package creation build step",
            "configOptions": ["*", "-no-pull-build-requires", "-[no-]search-output-dir", "target!", "-task"],
            "hooks": ["post-package", "pre-sign"],
            "preRun": "module.maybeImportSigningKey"
        },
        {
            "name": "build-shell",
            "trSynopsis": "[--maintain] [--] [<command> [<arg>...]]",
            "trBrief": "Execute custom build steps",
            "configOptions": ["build-shell.args", "build-shell.maintenance-args", "[no-]snapshot", "target!"],
            "dynamic": true
        }
    ],

    "options":
    [
        {
            "name": "specfile",
            "trArgument": "<file>",
            "alias": "specfile",
            "validator": "module.validateSpecFilePath"
        },
        {
            "name": "target",
            "trArgument": "<name>",
            "validator": "module.validateBuildTargetName"
        },
        {
            "name": "output-dir",
            "trArgument": "<dir>",
            "validator": "module.validateExistingWorkspaceDirectory"
        },
        {
            "name": "output-prefix",
            "trArgument": "<dir>",
            "validator": "module.validateExistingWorkspaceDirectory"
        },
        {
            "name": "search-output-dir",
            "trArgument": "[verbose|quiet]",
            "validator": "module.validateSearchOutputDirOption"
        },
        {
            "name": "no-search-output-dir"
        },
        {
            "name": "snapshot",
            "trArgument": "[<suffix>]"
        },
        {
            "name": "no-snapshot",
            "trArgument": "[force]"
        },
        {
            "name": "task",
            "trArgument": "[<name>|git:<regex>]"
        },
        {
            "name": "fix-version",
            "trArgument": "[<tag>]"
        },
        {
            "name": "no-fix-version"
        },
        {
            "name": "no-pull-build-requires"
        },
        {
            "name": "build-shell.args",
            "trArgument": "<args>"
        },
        {
            "name": "build-shell.maintenance-args",
            "trArgument": "<args>"
        },
        {
            "name": "package.signing-user",
            "trArgument": "<name>"
        },
        {
            "name": "package.signing-passphrase",
            "trArgument": "<passphrase>"
        },
        {
            "name": "package.signing-passphrase-file",
            "trArgument": "<file>",
            "validator": "module.validateExistingWorkspaceFile"
        },
        {
            "name": "package.timeline"
        }
    ],

    "hooks":
    [
        {
            "name": "pre-pull-build-requires",
            "trSynopsis": "[<dependency>...]"
        },
        {
            "name": "pull-build-requires",
            "trSynopsis": "[<dependency>...]"
        },
        {
            "name": "post-pull-build-requires",
            "trSynopsis": "[<dependency>...]"
        },
        {
            "name": "post-package",
            "trSynopsis": "<package-file>..."
        },
        {
            "name": "pre-sign",
            "trSynopsis": "<package-file>..."
        }
    ]
}
