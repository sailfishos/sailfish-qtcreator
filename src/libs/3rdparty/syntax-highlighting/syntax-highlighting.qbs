import qbs 1.0
import qbs.File
import qbs.FileInfo
import qbs.Environment

Project {
    QtcDevHeaders {
        productName: "syntax-highlighting (3rd party)"
        baseDir: sourceDirectory + "/src/lib"
    }
    QtcDevHeaders {
        productName: "syntax-highlighting autogenerated (3rd party)"
        baseDir: sourceDirectory + "/autogenerated/src/lib"
        Group {
            prefix: baseDir + '/'
            files: [
                "AbstractHighlighter",
                "Definition",
                "DefinitionDownloader",
                "FoldingRegion",
                "Format",
                "Repository",
                "State",
                "SyntaxHighlighter",
                "Theme"
            ]
            qbs.install: true
            qbs.installDir: qtc.ide_include_path + '/' + FileInfo.fileName(product.sourceDirectory)
            qbs.installSourceBase: baseDir
        }
    }

    QtcLibrary {
        name: "KSyntaxHighlighting"

        cpp.defines: base.concat("KSYNTAXHIGHLIGHTING_LIBRARY")
        cpp.includePaths: [
            product.sourceDirectory + "/src/lib/",
            product.sourceDirectory + "/autogenerated/src/lib/",
            product.sourceDirectory + "/autogenerated/"
        ]

        Depends { name: "Qt.gui" }
        Depends { name: "Qt.network" }

        Group {
            name: "lib"
            prefix: "src/lib/"
            files: [
                "*.h",
                "*.cpp"
            ]
        }

        Group {
            name: "KSyntaxHighlighting data"
            qbs.install: true
            qbs.installDir: qtc.ide_data_path + "/generic-highlighter/"
            qbs.installSourceBase: project.ide_source_tree + "/src/libs/3rdparty/syntax-highlighting/data/"
            prefix: project.ide_source_tree + "/src/libs/3rdparty/syntax-highlighting/data/"
            files: [
                "syntax/**/*"
            ]
        }

        Group {
            name: "autogenerated lib"
            prefix: "autogenerated/src/lib/"
            files: [
                "*.h",
                "*.cpp"
            ]
        }

        Group {
            name: "theme data"
            prefix: "data/themes/"
            files: [ "theme-data.qrc" ]
        }

        Export {
            Depends { name: "cpp" }
            cpp.includePaths: [
                product.sourceDirectory + "/src/lib/",
                product.sourceDirectory + "/autogenerated/src/lib/",
            ]
        }
    }
}
