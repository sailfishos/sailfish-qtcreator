/****************************************************************************
**
** Copyright (C) 2019 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Design Studio documentation.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
**
****************************************************************************/

/*!
    \qmltype SvgPath
    \inqmlmodule QtQuick.Studio.Components
    \since QtQuick.Studio.Components 1.0
    \inherits ShapePath
    \ingroup qtquickstudio-components

    \brief A path defined using an SVG path data string.

    The SvgPath type uses an SVG path data string to draw a path as a line.

    The \l strokeColor, \l strokeWidth, and \l strokeStyle, properties specify
    the appearance of the path. The \l dashPattern and \l dashOffset properties
    specify the appearance of dashed lines.

    The \l capStyle property specifies whether line ends are square or
    rounded.

    The \l joinStyle property specifies how to connect two path segments.
    If the path segments enclose areas, they can be painted using either
    a solid fill color, specified using the \l fillColor property, or a
    gradient, defined using one of the \l ShapeGradient subtypes and set
    using the \l gradient property. If both a color and a gradient are
    specified, the gradient is used.

    If the path has curves, it may be appropriate to set the \l antialiasing
    property to improve its appearance.

    \note Mixing SvgPath with other types of elements is not always supported.
    For example, when \l Shape is backed by \c GL_NV_path_rendering, a
    \l ShapePath can contain one or more SvgPath elements, or one or more
    elements of other types, but not both.
*/

/*!
    \qmlproperty ShapePath SvgPath::capStyle

    The cap style of the line.

    \value ShapePath.FlatCap
           A square line end that does not cover the end point of the line.
    \value ShapePath.SquareCap
           A square line end that covers the end point and extends beyond it
           by half the line width. This is the default value.
    \value ShapePath.RoundCap
           A rounded line end.

    \sa Qt::PenCapStyle
*/

/*!
    \qmlproperty ShapePath SvgPath::dashOffset

    The starting point of the dash pattern for the line.

    The offset is measured in terms of the units used to specify the dash
    pattern. For example, a pattern where each stroke is four units long,
    followed by a gap of two units, will begin with the stroke when drawn
    as a line. However, if the dash offset is set to 4.0, any line drawn
    will begin with the gap. Values of the offset up to 4.0 will cause part
    of the stroke to be drawn first, and values of the offset between 4.0 and
    6.0 will cause the line to begin with part of the gap.

    The default value is 0.

    \sa QPen::setDashOffset()
*/

/*!
    \qmlproperty ShapePath SvgPath::dashPattern

    The dash pattern of the line specified as the dashes and the gaps between
    them.

    The dash pattern is specified in units of the pen's width. That is, a dash
    with the length 5 and width 10 is 50 pixels long.

    Each dash is also subject to cap styles, and therefore a dash of 1 with
    square cap set will extend 0.5 pixels out in each direction resulting in
    a total width of 2.

    The default \l capStyle is \c {ShapePath.SquareCap}, meaning that a square
    line end covers the end point and extends beyond it by half the line width.

    The default value is (4, 2), meaning a dash of 4 * \l strokeWidth pixels
    followed by a space of 2 * \l strokeWidth pixels.

    \sa QPen::setDashPattern()
*/

/*!
    \qmlproperty ShapePath SvgPath::fillColor

    The fill color of enclosed path segments.

    A gradient for the fill can be specified by using \l gradient. If both a
    color and a gradient are specified, the gradient is used.

    When set to \c transparent, no filling occurs.

    The default value is \c white.
*/

/*!
    \qmlproperty ShapePath SvgPath::gradient

    The gradient of the fill color.

    By default, no gradient is enabled and the value is null. In this case, the
    fill uses a solid color based on the value of \l fillColor.

    When set, \l fillColor is ignored and filling is done using one of the
    \l ShapeGradient subtypes.

    \note The \l Gradient type cannot be used here. Rather, prefer using one of
    the advanced subtypes, like \l LinearGradient.
*/

/*!
    \qmlproperty ShapePath SvgPath::joinStyle

    The join style used to connect two path segments.

    \value ShapePath.MiterJoin
           The outer edges of the lines are extended to meet at an angle, and
           this area is filled.
    \value ShapePath.BevelJoin
           The triangular notch between the two lines is filled.
           This is the default value.
    \value ShapePath.RoundJoin
           A circular arc between the two lines is filled.

    \sa Qt::PenJoinStyle
*/

/*!
    \qmlproperty ShapePath SvgPath::strokeColor

    The color of the line.

    When set to \c transparent, no line is drawn.

    The default value is \c white.

    \sa QColor
*/

/*!
    \qmlproperty ShapePath SvgPath::strokeStyle

    The style of the line.

    \value ShapePath.SolidLine
           A solid line. This is the default value.
    \value ShapePath.DashLine
           Dashes separated by a few pixels.
           The \l dashPattern property specifies the dash pattern.

    \sa Qt::PenStyle
*/

/*!
    \qmlproperty ShapePath SvgPath::strokeWidth

    The width of the line.

    When set to a negative value, no line is drawn.

    The default value is 1.
*/

/*!
    \qmlproperty string SvgPath::path

    The SVG path data string specifying the path.

    For more information, see \l{https://www.w3.org/TR/SVG/paths.html#PathData}
    {W3C SVG Path Data}.
*/

/*!
    \qmlproperty bool SvgPath::antialising

    Whether the path should be antialiased.

    Antialiasing might require more memory and slow down drawing the type.
*/
